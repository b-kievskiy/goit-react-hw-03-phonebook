{"version":3,"sources":["Form/form.module.css","Form/Form1.js","Filter/Filter.js","ContactsList/ContactsList.js","App.js","index.js","ContactsList/contacts.module.css"],"names":["module","exports","Form1","state","name","number","handlerSubmit","e","preventDefault","newUser","id","uuid","props","contacts","find","contact","alert","setState","prev","addNewUser","handlerOnChange","target","value","this","className","styles","list","onSubmit","listItemLable","listItem","type","onChange","btnSubmit","Component","Filter","filter","length","ContactsList","deleteContact","filteredContacts","toUpperCase","includes","map","key","btnDelete","data-id","onClick","App","delContact","dataset","prevContacts","localStorage","getItem","JSON","parse","error","console","prevProps","prevState","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,cAAgB,4BAA4B,SAAW,uBAAuB,UAAY,0B,uMCIzHC,EAAb,4MACEC,MAAQ,CACNC,KAAM,GACNC,OAAQ,IAHZ,EAMEC,cAAgB,SAAAC,GACdA,EAAEC,iBADiB,MAEM,EAAKL,MAAtBC,EAFW,EAEXA,KAAMC,EAFK,EAELA,OACRI,EAAU,CAAEC,GAAIC,iBAAQP,OAAMC,UAGpC,GADe,EAAKO,MAAMC,SAASC,MAAK,SAAAC,GAAO,OAAIX,IAASW,EAAQX,QAOlE,OALAY,MAAM,GAAD,OAAIZ,EAAJ,+BACL,EAAKa,UAAS,SAAAC,GAAI,MAAK,CACrBd,KAAM,GACNC,OAAQ,OAKZ,EAAKO,MAAMO,WAAWV,GACtB,EAAKQ,SAAS,CACZb,KAAM,GACNC,OAAQ,MAxBd,EA4BEe,gBAAkB,SAAAb,GAChB,EAAKU,SAAL,eAAiBV,EAAEc,OAAOjB,KAAOG,EAAEc,OAAOC,SA7B9C,uDAgCY,IAAD,EACkBC,KAAKpB,MAAtBC,EADD,EACCA,KAAMC,EADP,EACOA,OACd,OACE,oCACE,0BAAMmB,UAAWC,IAAOC,KAAMC,SAAUJ,KAAKjB,eAC3C,2BAAOkB,UAAWC,IAAOG,eAAzB,OAEE,2BACEJ,UAAWC,IAAOI,SAClBC,KAAK,OACL1B,KAAK,OACLkB,MAAOlB,EACP2B,SAAUR,KAAKH,mBAGnB,2BAAOI,UAAWC,IAAOG,eAAzB,SAEE,2BACEJ,UAAWC,IAAOI,SAClBC,KAAK,OACL1B,KAAK,SACLkB,MAAOjB,EACP0B,SAAUR,KAAKH,mBAGnB,4BAAQI,UAAWC,IAAOO,UAAWF,KAAK,UAA1C,qBAzDV,GAA2BG,aCmBZC,MArBf,YAAwD,IAAtCrB,EAAqC,EAArCA,SAAUsB,EAA2B,EAA3BA,OAAQf,EAAmB,EAAnBA,gBAClC,OACGP,EAASuB,OAAS,GACjB,oCACA,oDACA,2BACEN,KAAK,OACL1B,KAAK,SACLkB,MAAOa,EACPJ,SAAUX,M,gBCaHiB,MArBf,YAA4D,IAApCF,EAAmC,EAAnCA,OAAQtB,EAA2B,EAA3BA,SAAUyB,EAAiB,EAAjBA,cAClCC,EAAmB1B,EAASsB,QAAO,SAAApB,GAAO,OAAIA,EAAQX,KAAKoC,cAAcC,SAASN,EAAOK,kBAC/F,OACE,wBAAIhB,UAAWC,IAAOC,MACnBa,EAAiBG,KAAI,SAAA3B,GAAO,OAC3B,wBAAIS,UAAWC,IAAOI,SAAUc,IAAK5B,EAAQL,IAC1CK,EAAQX,KADX,KACmBW,EAAQV,OACzB,4BAAQmB,UAAWC,IAAOmB,UAAWd,KAAK,SAASe,UAAS9B,EAAQL,GAAIoC,QAASR,GAAjF,gBCJGS,EAAb,4MACE5C,MAAQ,CACNU,SAAU,GACVsB,OAAQ,IAHZ,EAgDEhB,WAAa,SAAAV,GACX,EAAKQ,UAAS,SAAAC,GAAI,MAAK,CACrBL,SAAS,GAAD,mBAAMK,EAAKL,UAAX,CAAqBJ,SAlDnC,EAsDEW,gBAAkB,SAAAb,GAChB,EAAKU,SAAL,eAAiBV,EAAEc,OAAOjB,KAAOG,EAAEc,OAAOC,SAvD9C,EA0DEgB,cAAgB,SAAA/B,GACd,IAAMyC,EAAa,EAAK7C,MAAMU,SAASsB,QACrC,SAAApB,GAAO,OAAIA,EAAQL,KAAOH,EAAEc,OAAO4B,QAAQvC,MAE7C,EAAKO,SAAS,CACZJ,SAAS,YAAKmC,MA/DpB,kEASI,IAAME,EAAeC,aAAaC,QAAQ,YAC1C,GAAIF,EACF,IACE,IAAMrC,EAAWwC,KAAKC,MAAMJ,GAC5B3B,KAAKN,SAAS,CAAEJ,aAChB,MAAO0C,GACPC,QAAQD,MAAM,WAAYA,MAflC,yCAoBqBE,EAAWC,GACxBA,EAAU7C,WAAaU,KAAKpB,MAAMU,UACpCsC,aAAaQ,QAAQ,WAAYN,KAAKO,UAAUrC,KAAKpB,MAAMU,aAtBjE,+BAmEY,IAAD,EACyCU,KAAKpB,MAA1BgC,EADpB,EACoBA,OAAQtB,EAD5B,EAC4BA,SACnC,OACE,oCACE,yCAOA,kBAAC,EAAD,CAAOA,SAAUA,EAAUM,WAAYI,KAAKJ,aAC5C,wCACA,kBAAC,EAAD,CACEgB,OAAQA,EACRtB,SAAUA,EACVO,gBAAiBG,KAAKH,kBAExB,kBAAC,EAAD,CACEe,OAAQA,EACRtB,SAAUA,EACVyB,cAAef,KAAKe,qBAxF9B,GAAyBL,a,MCFzB4B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,kBCJjDhE,EAAOC,QAAU,CAAC,KAAO,uBAAuB,SAAW,2BAA2B,UAAY,+B","file":"static/js/main.e3796a73.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"form_list__1AP3o\",\"listItemLable\":\"form_listItemLable__2cRdu\",\"listItem\":\"form_listItem__vwC8K\",\"btnSubmit\":\"form_btnSubmit__1cPyJ\"};","import React, { Component } from 'react';\r\nimport { uuid } from 'uuidv4';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './form.module.css';\r\n\r\nexport class Form1 extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handlerSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const newUser = { id: uuid(), name, number };\r\n\r\n    const isName = this.props.contacts.find(contact => name === contact.name);\r\n    if (isName) {\r\n      alert(`${name} is already contacts.`);\r\n      this.setState(prev => ({\r\n        name: '',\r\n        number: '',\r\n      }));\r\n      return;\r\n    }\r\n\r\n    this.props.addNewUser(newUser);\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  handlerOnChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <>\r\n        <form className={styles.list} onSubmit={this.handlerSubmit}>\r\n          <label className={styles.listItemLable}>\r\n            Name\r\n            <input\r\n              className={styles.listItem}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={this.handlerOnChange}\r\n            />\r\n          </label>\r\n          <label className={styles.listItemLable}>\r\n            Number\r\n            <input\r\n              className={styles.listItem}\r\n              type=\"text\"\r\n              name=\"number\"\r\n              value={number}\r\n              onChange={this.handlerOnChange}\r\n            />\r\n          </label>\r\n          <button className={styles.btnSubmit} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nForm1.propTypes = {\r\n  addNewUser: PropTypes.func.isRequired,\r\n  contacts: PropTypes.array.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Filter({ contacts, filter, handlerOnChange }) {\r\n  return (\r\n    (contacts.length > 1) && (\r\n      <>\r\n      <p>Find contacts by name</p>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={handlerOnChange}\r\n      />\r\n      </>\r\n    )\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  contacts: PropTypes.array.isRequired,\r\n  handlerOnChange: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './contacts.module.css';\r\n\r\nfunction ContactsList({ filter, contacts, deleteContact }) {\r\n  const filteredContacts = contacts.filter(contact => contact.name.toUpperCase().includes(filter.toUpperCase()));\r\n  return (\r\n    <ul className={styles.list}>\r\n      {filteredContacts.map(contact => (\r\n        <li className={styles.listItem} key={contact.id}>\r\n          {contact.name}: {contact.number}\r\n          <button className={styles.btnDelete} type='button' data-id={contact.id} onClick={deleteContact}>Delete</button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n    // )\r\n  );\r\n}\r\n\r\nContactsList.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  contacts: PropTypes.array.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactsList;\r\n","import React, { Component } from 'react';\n// import { uuid } from 'uuidv4';\n// import Form from './Form/Form';\nimport { Form1 } from './Form/Form1';\nimport Filter from './Filter/Filter';\nimport ContactsList from './ContactsList/ContactsList';\n\nexport class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n    // name: '',\n    // number: '',\n  };\n\n  componentDidMount() {\n    const prevContacts = localStorage.getItem('contacts');\n    if (prevContacts) {\n      try {\n        const contacts = JSON.parse(prevContacts);\n        this.setState({ contacts });\n      } catch (error) {\n        console.error('Error = ', error);\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  // handlerSubmit = e => {\n  //   e.preventDefault();\n  //   const { name, number } = this.state;\n  //   const newUser = { id: uuid(), name, number };\n\n  //   const isName = this.state.contacts.find(contact => name === contact.name);\n  //   if (isName) {\n  //     alert(`${name} is already contacts.`);\n  //     this.setState(prev => ({\n  //       name: '',\n  //       number: '',\n  //     }));\n  //     return;\n  //   }\n\n  //   this.setState(prev => ({\n  //     contacts: [...prev.contacts, newUser],\n  //     name: '',\n  //     number: '',\n  //   }));\n  // };\n  // ==================\n  addNewUser = newUser => {\n    this.setState(prev => ({\n      contacts: [...prev.contacts, newUser],\n    }));\n  };\n\n  handlerOnChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  deleteContact = e => {\n    const delContact = this.state.contacts.filter(\n      contact => contact.id !== e.target.dataset.id,\n    );\n    this.setState({\n      contacts: [...delContact],\n    });\n  };\n\n  render() {\n    const { /* name, number,*/ filter, contacts } = this.state;\n    return (\n      <>\n        <h1>Phonebook</h1>\n        {/* <Form\n          name={name}\n          number={number}\n          handlerOnChange={this.handlerOnChange}\n          handlerSubmit={this.handlerSubmit}\n        /> */}\n        <Form1 contacts={contacts} addNewUser={this.addNewUser} />\n        <h2>Contacts</h2>\n        <Filter\n          filter={filter}\n          contacts={contacts}\n          handlerOnChange={this.handlerOnChange}\n        />\n        <ContactsList\n          filter={filter}\n          contacts={contacts}\n          deleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport './styles/main.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contacts_list__6z2fD\",\"listItem\":\"contacts_listItem__1E05o\",\"btnDelete\":\"contacts_btnDelete__35Hnc\"};"],"sourceRoot":""}